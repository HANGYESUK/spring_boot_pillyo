<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  <mapper namespace="com.pillyo.pill.dao.IUserDAO">
  
  	<!-- 유져 DB 가져오기 -->
	<resultMap  id="userResult" type="com.pillyo.pill.model.UserVO">
	  <result property="userId" column="userId" />
	  <result property="userPw" column="userPw" />
	</resultMap> 
  
	<!-- 로그인 확인 -->
	<select id="loginCheck" resultMap="userResult" parameterType="hashmap">
		SELECT * FROM user WHERE userId=#{id} AND userPw=#{pw}
	</select>
	
	<!-- ID 중복 확인 -->
	<select id="userIdCheck" resultType="string" parameterType="string">
		SELECT userId FROM user WHERE userId =#{userId}
	</select>
	
	<!-- Email 중복 확인 -->
	<select id="userEmailCheck" resultType="string" parameterType="string">
		<!-- SELECT userEmail FROM user WHERE userEmail = #{email} -->
		SELECT userEmail FROM user WHERE userEmail = #{email} LIMIT 1
	</select>
	
	<!-- 회원가입 -->
	<insert id="userJoin" parameterType="com.pillyo.pill.model.UserVO">
		INSERT INTO user(userId, userPw, userName, userHp, userEmail, userAddress1, userAddress2, userZipcode, joinDate, joinPath, notification)
		VALUES (#{userId}, #{userPw}, #{userName}, #{userHp}, #{userEmail}, #{userAddress1}, #{userAddress2},#{userZipcode}, default, 0, #{notification} )
	</insert>
  	
	<!-- 회원 상세 정보 -->
	<select id="detailUserView" parameterType="String" resultType="com.pillyo.pill.model.UserVO">
		SELECT * FROM user WHERE userId =#{userId}
	</select>
		
	<!-- 회원 정보 삭제 -->
	<delete id="deleteUser" parameterType="String">
		DELETE FROM user WHERE userId =#{userId}
	</delete>
  		
 	<!-- 회원 정보 수정 -->
	<update id="updateUser" parameterType="com.pillyo.pill.model.UserVO">
		UPDATE user SET
			userPw=#{userPw}, 
			userName=#{userName}, 
			userHp=#{userHp}, 
			userEmail=#{userEmail}, 
			userAddress1=#{userAddress1}, 
			userAddress2=#{userAddress2}, 
			userZipcode=#{userZipcode},
			notification=#{notification}
		WHERE userId =#{userId}
	</update>
	
	<!-- 관리자메뉴-회원조회 -->
	<select id="listAllUser" resultType="com.pillyo.pill.model.UserVO">
		SELECT * FROM user
		ORDER BY userName
	</select>
	
	<select id="userCount" resultType="int">
		SELECT COUNT(*) FROM user
	</select>
	
	<!-- 페이징위한 쿼리 -->
	
		<!-- 검색 조건문 -->
			<sql id="criteria">
				<trim prefix="where (" suffix=")" prefixOverrides="OR">
					<foreach collection="typeArr" item="type">
						<trim prefix="OR">
							<choose>
								<when test="type == 'I'.toString()">
									userId like concat('%',#{keyword},'%') 
								</when>
								<when test="type == 'N'.toString()">
									userName like concat('%',#{keyword},'%') 
								</when>
								<when test="type == 'HP'.toString()">
									userHp like concat('%',#{keyword},'%') 
								</when>
								<when test="type == 'E'.toString()">
									userEmail like concat('%',#{keyword},'%') 
								</when>
						
							</choose>
						</trim>
					</foreach>
				</trim>
			
			</sql>
  			
	
 		<!-- 게시물 목록(페이징) -->
    <select id="getUserListPaging" resultType="com.pillyo.pill.model.UserVO">
    
        select * from user 
                	                
	  	<if test="keyword != null">
			<include refid="criteria"></include>
		</if>                	                
                	                
        limit #{skip},#{amount}
    
    </select>
 		
 		
 		<!-- 총 게시글 갯수 출력 -->
	<select id="getTotal" resultType="int">
		SELECT COUNT(*) FROM user
		
		<if test="keyword != null">
			<include refid="criteria"></include>
		</if>
		
	</select>

	
	<!-- 아이디 찾기 -->
	<select id="findUserId" resultType="string" parameterType="string">
		SELECT * FROM user WHERE
			userName=#{userName} AND <!-- 유저 이름 -->
			userEmail=#{userEmail}	 <!-- 유저 이메일로 아이디 확인 -->
	</select>
	
	<!-- 비밀번호 찾기 -->
	<select id="findUserPw" resultType="string" parameterType="string">
		SELECT * FROM user WHERE
			userId=#{userId} AND 	<!-- 유저 아이디 -->
			userEmail=#{userEmail}	<!-- 유저 이메일로 비밀번호 확인 -->
	</select>
	
  </mapper>